import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Nhập kích thước của mảng: ");
        int size = sc.nextInt();
        int[] arr = new int[size];
        for (int i = 0; i < size; i++) {
            System.out.println("Enter number " + (i + 1) + ": ");
            arr[i] = sc.nextInt();
        }
        System.out.println("Nhập phần tử muốn tìm kiếm:");
        int findIndex = sc.nextInt();
        linearSearch(arr, findIndex);
        if (findIndex != -1) {
            System.out.println("Tìm kiếm tuyến tính:Tìm thấy số " + findIndex + " tại chỉ số: " + findIndex);
        } else {
            System.out.println("Không tìm thấy số" + findIndex);
        }


        bianarySearch(arr, findIndex);
        if (findIndex != -1) {
            System.out.println("Tìm kiếm nhị phân:Tìm thấy số " + findIndex + " tại chỉ số: " + findIndex);
        } else {
            System.out.println("Không tìm thấy số" + findIndex);
        }



        System.out.println("Mảng ban đầu:");
        for (int num : arr) {
            System.out.print(num + " ");
        }
        selectionSort(arr);
        System.out.println("\n Mảng Sau khi sắp xếp:");
        for (int num : arr) {
            System.out.print(num + " ");
        }
    }

    public static void selectionSort(int[] arr) {
        int n = arr.length;
        for (int i = 0; i < n - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (arr[j] < arr[minIndex]) {
                    minIndex = j;
                }
            }
            int temp = arr[minIndex];
            arr[minIndex] = arr[i];
            arr[i] = temp;
        }
    }

    public static int linearSearch(int[] arr, int findIndex) {
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == findIndex) {
                return i;
            }
        }
        return -1;
    }

    public static int bianarySearch(int[] arr, int findIndex) {
        int low = 0;
        int high = arr.length - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (arr[mid] == findIndex) {
                return mid;
            } else if (arr[mid] < findIndex) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return -1;


    }
}

